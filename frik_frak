/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package jogofrikfrak;
import java.awt.Font;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.util.Scanner;
import javax.swing.*;
import javax.swing.JLabel;

/**
 *
 * @author helton
 */
public class JogoFrikFrak extends JFrame {
     //Botoes
    private JPanel tabuleiro;
     private JButton[][] botoes = new JButton[3][3];
     JButton[] bt =new JButton[9];
    JLabel placar=new JLabel("placar");
    JLabel px=new JLabel("X 0");
    JLabel po=new JLabel("O 0");
    int PX=0;
    int pO=0;
    boolean xo=false;
    boolean[] click=new boolean[6];
    private int PO;
    
    
    //Construtor
    public JogoFrikFrak(){
        //janela visivel
        setVisible (true);
        //titulo da janela
        setTitle("jogo Frik Frak");
        //
        setDefaultCloseOperation(3);
        setLayout(null);
        //Tamanho da janela
        setBounds(250,100,700,500);
        add(placar);
        add(px);
        add(po);
        
        placar.setBounds(425,50,100,30);
         px.setBounds(400,75,100,30);
          po.setBounds(450,75,100,30);
        
        int cont=0;
        for(int i=0; i<3; i++){
        for(int j=0; j<3; j++){
        bt[cont]=new JButton();
        add(bt[cont]);
        bt[cont].setBounds((100*i)+50,(100*j)+50,95,95);
        //tamanho de X e O e tipo de letra
        bt[cont].setFont(new Font("Times New Roman",Font.BOLD,40));
        
        cont++;
                
                
            }
            
        }
        //Valor falso para cada posicao
        for(int i=0;i<9;i++){
            click[i]=false;
        }
        //Definir Botoes'X'ou'O'
        bt[0].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
             
                if(click[0]== false){
                 click[0]=true;   
                
                mudar(bt[0]);
              }
            }
        });
          bt[1].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

                if(click[1]== false){
                 click[1]=true;   
                
                mudar(bt[1]);
              }
            }
        });
            bt[2].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                 
             
                if(click[2]== false){
                 click[2]=true;   
                
                mudar(bt[2]);
              }
            }
        });
              bt[3].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
             
                if(click[3]== false){
                 click[3]=true;   
                
                mudar(bt[3]);
              }
            }
        });
               bt[4].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
             
                if(click[4]== false){
                 click[4]=true;   
                
                mudar(bt[4]);
              }
            }
        });
                  bt[5].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
              
                if(click[5]== false){
                 click[5]=true;   
                
                mudar(bt[5]);
              }
            }
        });
                    bt[6].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
            
                if(click[6]== false){
                 click[6]=true;   
                
                mudar(bt[6]);
              }
            }
        });
                    
                      bt[7].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
               
                if(click[7]== false){
                 click[7]=true;   
                
                mudar(bt[7]);
              }
            }
        });
                        bt[8].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
            
                if(click[8]== false){
                 click[8]=true;   
                
                mudar(bt[8]);
              }
            }
        });
    }
    //Metodos

   

      public void pecas(){
        for(int i=0;i<=3;i++){
             for(int j=0;i<=2;j++){
                 bt[i].setText("");
                
            
        }}
         
    }
  
    
       public void mudar(JButton btn){
           if(xo){
               btn.setText("O");
               xo=false;
               
           }else{
               btn.setText("X");
               xo=true;
           }
           venceu();
       }
       public void atualizar(){
           px.setText("X"+px);
           po.setText("O"+pO);
       }//posicao de vencer frik
       public void venceu(){
           if((bt[0].getText()=="X"&& bt[1].getText()=="X"&& bt[2].getText()=="X")
           ||(bt[3].getText()=="X"&& bt[4].getText()=="X"&& bt[5].getText()=="X")
           ||(bt[6].getText()=="X"&& bt[7].getText()=="X"&& bt[8].getText()=="X")
           ||(bt[0].getText()=="X"&& bt[3].getText()=="X"&& bt[6].getText()=="X")
           ||(bt[1].getText()=="X"&& bt[4].getText()=="X"&& bt[7].getText()=="X")
           ||(bt[2].getText()=="X"&& bt[5].getText()=="X"&& bt[8].getText()=="X")
           ||(bt[0].getText()=="X"&& bt[4].getText()=="X"&& bt[8].getText()=="X")
           ||(bt[6].getText()=="X"&& bt[4].getText()=="X"&& bt[2].getText()=="X")){
           JOptionPane.showMessageDialog(null,"X venceu");
           PX++;
           atualizar();
           limpar();
           
           pecas();
            
           }else if((bt[0].getText()=="O"&& bt[1].getText()=="O"&& bt[2].getText()=="O")
           ||(bt[3].getText()=="O"&& bt[4].getText()=="O"&& bt[5].getText()=="O")
           ||(bt[6].getText()=="O"&& bt[7].getText()=="O"&& bt[8].getText()=="O")
           ||(bt[0].getText()=="O"&& bt[3].getText()=="O"&& bt[6].getText()=="O")
           ||(bt[1].getText()=="O"&& bt[4].getText()=="O"&& bt[7].getText()=="O")
           ||(bt[2].getText()=="O"&& bt[5].getText()=="O"&& bt[8].getText()=="O")
           ||(bt[0].getText()=="O"&& bt[4].getText()=="O"&& bt[8].getText()=="O")
           ||(bt[6].getText()=="O"&& bt[4].getText()=="O"&& bt[2].getText()=="O")){
           JOptionPane.showMessageDialog(null,"O venceu");
           pO++;
           atualizar();
           limpar();
           pecas();
           
           
           }
       }
       public void limpar(){
           for(int i=0;i<9;i++){
               for(int j=0;j<9;j++)
               bt[i].setText("");
               click[1]=false;
               xo=false;
           }
    
       
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
         Scanner ler = new Scanner(System.in);
       new JogoFrikFrak();
  
    }

   
    }
    

